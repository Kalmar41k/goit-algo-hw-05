"""
Модуль для обчислення чисел Фібоначчі з використанням кешування.

Цей модуль містить функцію `caching_fibonacci`, яка створює та повертає функцію 
для обчислення чисел Фібоначчі з оптимізацією за допомогою кешування. 

Кешування дозволяє уникнути повторних обчислень уже відомих чисел Фібоначчі, що 
значно прискорює виконання для великих значень n.

Основні функціональні можливості:
    Обчислення чисел Фібоначчі з використанням рекурсії.
    Зберігання результатів обчислень у кеші для оптимізації.
"""
from typing import Callable

def caching_fibonacci() -> Callable[[int], int]:
    """
    Створює функцію для обчислення чисел Фібоначчі з використанням кешування.

    Функція, що повертається, обчислює значення чисел Фібоначчі, зберігаючи вже 
    обчислені значення у кеші для оптимізації повторних викликів.

    Returns:
        Callable[[int], int]: Функція, яка приймає ціле число n і повертає n-те число Фібоначчі.
    """
    cache = {}

    def fibonacci(n: int) -> int:
        """
        Обчислює n-те число Фібоначчі з використанням кешування.

        Args:
            n (int): Порядковий номер числа Фібоначчі, яке необхідно обчислити.

        Returns:
            int: Значення n-го числа Фібоначчі.
        """
        if n <= 0:
            return 0
        elif n == 1:
            return 1
        elif n in cache:
            return cache[n]

        cache[n] = fibonacci(n - 1) + fibonacci(n - 2)
        return cache[n]

    return fibonacci

# Приклад використання функції
fibonacci = caching_fibonacci()
print(fibonacci(11))
print(fibonacci(20))
print(fibonacci(11))
